name: Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SOURCE_REPO: us-central1-docker.pkg.dev/goodlittlescript-io-dev/gcp-django
  IMAGES_FILE: images.json

jobs:

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v3
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/166389283410/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-prvdr'
        service_account: 'dt-gcp-django@goodlittlescript-io-dev.iam.gserviceaccount.com'
    - name: 'Authenticate to Docker Repo'
      run: gcloud auth configure-docker "$(sed -e 's|/.*||' <<<"$SOURCE_REPO")"
    - name: 'Authenticate in Docker Compose'
      run: |-
        printf "\n%s\n" "GOOGLE_APPLICATION_CREDENTIALS=/app/$(basename "$GOOGLE_APPLICATION_CREDENTIALS")" >> docker-compose.env
    - name: 'Set Env'
      run: |-
        printf "%s\n" "RUNTIME_IMAGE=${SOURCE_REPO}/runtime:${GITHUB_SHA}" >> "$GITHUB_ENV"
    - name: Build images
      run: ./Projectfile images
    - name: Test images
      run: ./Projectfile test
    - name: Push images
      run: ./Projectfile push > "$IMAGES_FILE"
    - uses: actions/upload-artifact@master
      with:
        name: image_digests
        path: ${{env.IMAGES_FILE}}

  plan:
    name: Plan
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v3
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/166389283410/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-prvdr'
        service_account: 'dt-gcp-django@goodlittlescript-io-dev.iam.gserviceaccount.com'
    - name: Commit
      run: |
        git config --local user.email "dt-gcp-django@goodlittlescript-io-dev.iam.gserviceaccount.com"
        git config --local user.name "dt-gcp-django planner"
        timestamp="$(date -u +"%Y%m%d%H%M%S")"
        git branch "release-${timestamp}-$GITHUB_RUN_ID"
        git add data
        git commit -m "GitHub Run ${GITHUB_RUN_NUMBER}"
        git push origin
    
# Plan
# commit to release branch as a job
# open MR to merge job into queue
# trigger on push, run each enqued job in lexical order, move to runs with additional data, delete job, commit + push
# delete all other release branches
# on failure open new mr with failed job, but incremented
#
#
# /queue
#   {path}/{job}.json
# /runs
#   {path}/{timestamp}-{job}.json
# /log
#   {path}/{timestamp}-{job}/ # if needed


# {
#   "metadata": {},
#   "name":
#   "command":
#   "env": [{
#     "key":
#     "value":
#   }],
#   "startTime":
#   "runTimeInS":
#   "exitStatus":
# }
