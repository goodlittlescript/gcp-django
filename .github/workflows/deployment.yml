name: Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SOURCE_REPO: us-central1-docker.pkg.dev/goodlittlescript-io-dev/gcp-django
  IMAGES_FILE: images.json

jobs:

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v3
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/166389283410/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-prvdr'
        service_account: 'dt-gcp-django@goodlittlescript-io-dev.iam.gserviceaccount.com'
    - name: 'Authenticate to Docker Repo'
      run: gcloud auth configure-docker "$(sed -e 's|/.*||' <<<"$SOURCE_REPO")"
    - name: 'Authenticate in Docker Compose'
      run: |-
        printf "\n%s\n" "GOOGLE_APPLICATION_CREDENTIALS=/app/$(basename "$GOOGLE_APPLICATION_CREDENTIALS")" >> docker-compose.env
    - name: 'Set Env'
      run: |-
        printf "%s\n" "RUNTIME_IMAGE=${SOURCE_REPO}/runtime:${GITHUB_SHA}" >> "$GITHUB_ENV"
    - name: Build images
      run: ./Projectfile images
    - name: Test images
      run: ./Projectfile test
    - name: Push images
      run: ./Projectfile push > "$IMAGES_FILE"
    - uses: actions/upload-artifact@master
      with:
        name: image_digests
        path: ${{env.IMAGES_FILE}}

  deploy-development:
    name: Deploy Development
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: development
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      SERVICE_NAME: gcp-django
      IMAGE_NAME: shell
      TARGET_REPO: us-central1-docker.pkg.dev/goodlittlescript-io-dev/gcp-django
    steps:
    - uses: actions/checkout@v3
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/166389283410/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-prvdr'
        service_account: 'dt-gcp-django@goodlittlescript-io-dev.iam.gserviceaccount.com'
    - name: 'Authenticate to Docker Repo'
      run: gcloud auth configure-docker "$(sed -e 's|/.*||' <<<"$SOURCE_REPO")"
    - uses: actions/download-artifact@master
      with:
        name: image_digests
    - name: 'Set Env'
      run: |-
        SOURCE_IMAGE256="$(jq -r '.[env.IMAGE_NAME]' "$IMAGES_FILE")"
        printf "%s\n" "SOURCE_IMAGE256=${SOURCE_IMAGE256}" >> "$GITHUB_ENV"
        printf "%s\n" "TARGET_IMAGE256=${TARGET_REPO}${SOURCE_IMAGE256#$SOURCE_REPO}" >> "$GITHUB_ENV"
        printf "%s\n" "REVISION_TAG=sha-$(head -c 7 <<<"$GITHUB_SHA")" >> "$GITHUB_ENV"
        printf "%s\n" "REVISION_SUFFIX=$GITHUB_RUN_ID" >> "$GITHUB_ENV"
    - name: 'Copy Image'
      run: |-
        skopeo copy docker://"${SOURCE_IMAGE256/:*@sha256/@sha256}" docker://"${TARGET_IMAGE256%@sha256*}"
    - name: 'Deploy CloudRun'
      run: |-
        printf "Service: %s-%s:%s\n" "$SERVICE_NAME" "$REVISION_SUFFIX" "$REVISION_TAG"
        printf "Image: %s\n" "$TARGET_IMAGE256"
        gcloud beta run deploy "$SERVICE_NAME" --image="$TARGET_IMAGE256" --revision-suffix "$REVISION_SUFFIX" --tag "$REVISION_TAG" --flags-file=config/dev.yml

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      SERVICE_NAME: gcp-django
      IMAGE_NAME: shell
      TARGET_REPO: us-central1-docker.pkg.dev/goodlittlescript-io-prd/gcp-django
    steps:
    - uses: actions/checkout@v3
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/166389283410/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-prvdr'
        service_account: 'dt-gcp-django@goodlittlescript-io-prd.iam.gserviceaccount.com'
    - name: 'Authenticate to Docker Repo'
      run: gcloud auth configure-docker "$(sed -e 's|/.*||' <<<"$SOURCE_REPO")"
    - uses: actions/download-artifact@master
      with:
        name: image_digests
    - name: 'Set Env'
      run: |-
        SOURCE_IMAGE256="$(jq -r '.[env.IMAGE_NAME]' "$IMAGES_FILE")"
        printf "%s\n" "SOURCE_IMAGE256=${SOURCE_IMAGE256}" >> "$GITHUB_ENV"
        printf "%s\n" "TARGET_IMAGE256=${TARGET_REPO}${SOURCE_IMAGE256#$SOURCE_REPO}" >> "$GITHUB_ENV"
        printf "%s\n" "REVISION_TAG=sha-$(head -c 7 <<<"$GITHUB_SHA")" >> "$GITHUB_ENV"
        printf "%s\n" "REVISION_SUFFIX=$GITHUB_RUN_ID" >> "$GITHUB_ENV"
    - name: 'Copy Image'
      run: |-
        skopeo copy docker://"${SOURCE_IMAGE256/:*@sha256/@sha256}" docker://"${TARGET_IMAGE256%@sha256*}"
    - name: 'Deploy CloudRun'
      run: |-
        printf "Service: %s-%s:%s\n" "$SERVICE_NAME" "$REVISION_SUFFIX" "$REVISION_TAG"
        printf "Image: %s\n" "$TARGET_IMAGE256"
        gcloud beta run deploy "$SERVICE_NAME" --image="$TARGET_IMAGE256" --revision-suffix "$REVISION_SUFFIX" --tag "$REVISION_TAG" --flags-file=config/prd.yml
